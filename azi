#!/usr/bin/env bash
#
#   Created by Alexander Rusakevich (mr.alexander.rusakevich@gmail.com)
#   Distributed under GNU GPL3 License
#   The full source code is available at https://github.com/alex-rusakevich/azilink-desktop
#   Special thanks to @aziwoqpd for his azilink. Vote for him on https://github.com/aziwoqpd/azilink
#

bold=$(tput bold)
normal=$(tput sgr0)
red=$(tput setaf 1)
green=$(tput setaf 2)

AZI_FILES_DIR="/usr/share/azilink-desktop"
AZI_THANKS="Special thanks to ${bold}@aziwoqpd${normal} for his azilink. Vote for him on https://github.com/aziwoqpd/azilink"
AZI_USAGE="$(basename "$0") [-h -v -reg -r -i -I] [-p path] -- azilink pc companion

where:
    -h, --help               show this help text and exit
    -v, --version            show program's version and exit
    -p, --path path_to_dir   set a new custom path to a folder with azilink.ovpn, resolv.conf and azilink.apk (default is '$AZI_FILES_DIR')
    -reg, --register         register your phone with azilink app and USB-debugging mode on and exit
    -r, --reset              reset connections with all the registered phones and exit         
    -i, --install-apk        installing (or reinstalling) azilink's apk through adb and exit (you must allow installing apk using USB-debug mode in \
your phone's developer settings)
    -I, --info               show package's full info and exit"
AZI_GUIDE="This is what you need to do with your phone:
1) enable developer settings on your phone;
2) enable USB-debugging and setup through USB;
3) connect your phone using USB cable;
4) set ${bold}file/media transfer mode / MTP${normal} instead of 'charging only' mode;
5) type 'sudo azi -reg' to connect your phone to azilink-desktop;
6) if you don't have azilink app on your phone, install it using 'azi -i';
7) start azilink app on your phone and make sure the service is active; 
8) start azilink on pc side by just typing 'sudo azi'.

You also can find this article helpful: https://wiki.archlinux.org/title/Android_tethering"

check_sudo() {
    if [ "$UID" -ne 0 ]
    then
        echo "$1 requires ${bold}sudo${normal}" >&2
        exit 1
    fi
}

log() {
    local TIME_NOW=`date "+%Y-%m-%d %H:%M:%S.%5N"`
    echo "[$TIME_NOW] azilink: $@"
}

kill_other_instances() {
    log "Killing the other instances of azilink if they exist..."

    script_name=${BASH_SOURCE[0]}
    for pid in $(pidof -x $script_name); do
        if [ $pid != $$ ]; then
            kill -KILL $pid
        fi 
    done
}

while [[ "$#" -gt 0 ]]; do
    case $1 in
        -h|--help) 
            echo "$AZI_THANKS"
            echo -e "$AZI_USAGE\n"
            echo "$AZI_GUIDE"
            exit 0
        ;;
        -v|--version) 
            echo `pacman -Q azilink-desktop-git`
            exit 0
        ;;
        -p|--path) 
            AZI_FILES_DIR="$2";
            if [[ -z "$AZI_FILES_DIR" ]]
            then
                echo "No path specified after '$1'" >&2
                exit 1
            fi
            shift 
        ;;
        -i|--install-apk) 
            adb install -r "$AZI_FILES_DIR/azilink.apk"
            exit 0
        ;;
        -I|--info)
            echo "`pacman -Qi azilink-desktop-git`"
            exit 0
        ;;
        -reg|--register)
            check_sudo "Connecting your device"

            echo -n "Make sure you've enabled ${bold}'File/Media transfer mode'${normal} instead of 'Charging-only mode' and press Enter."
            read

            echo "Please, select your device:"
            IFS=$'\n' read -d='' -r -a USB_DEVICES <<< "`lsusb`"
            
            count=1
            for device in "${USB_DEVICES[@]}"
            do
                echo "$count) $device"
                count=$(( count + 1 ))
            done
            IFS=

            echo -n "Your phone is: #"
            read phone_number
            phone_number=$(( $phone_number - 1 ))

            AZI_DEVICE=${USB_DEVICES[phone_number]}
            AZI_VENDOR_ID="$(echo "$AZI_DEVICE"| grep -P '(?<=ID\s)\d+(?=:)' --no-messages -o)"

            [ $SUDO_USER ] && user=$SUDO_USER || user=`whoami`

            touch /etc/udev/rules.d/51-android.rules
            echo "SUBSYSTEM==\"usb\", ATTR(idVendor)==\"$AZI_VENDOR_ID\", MODE=\"0666\" OWNER=\"$user\"" > '/etc/udev/rules.d/51-android.rules'
            udevadm control --reload

            log "Ensuring adb daemon is running..."
            adb kill-server
            adb start-server

            echo "`adb devices`"

            adb shell "exit 0"
            if [[ $? -ne 0 ]]; then 
                echo "${red}${bold}Unable to connect to your device. Did you accept connection on your phone?${normal}" >&2
                exit 1
            fi

            log "${bold}${green}Your device is ready to use! Hooray!${normal}"
            log "Shutting down adb server..."
            adb kill-server
            exit 0
        ;;
        -r|--reset)
            check_sudo "Resetting your connection"

            rm -f /etc/udev/rules.d/51-android.rules
            udevadm control --reload

            log "Restarting adb..."
            adb kill-server
            adb start-server

            log "${bold}${green}Successfully reset.${normal}"
            exit 0
        ;;
        *) 
            echo "Unknown parameter passed: $1" >&2
            echo "$AZI_USAGE" >&2
            exit 1 
        ;;
    esac
    shift
done

start() {
    check_sudo "Main functionality of azilink"

    kill_other_instances

    log "Killing openvpn if running..."
    pkill openvpn

    log "Shutting down NetworkManager..."
    systemctl stop NetworkManager

    log "Updating resolv.conf..."
    cp "$AZI_FILES_DIR/resolv.conf" /etc/
}

main() {
    adb forward tcp:41927 tcp:41927
    [[ $? -ne 0 ]] && finish 1

    modprobe tun

    log "Starting OpenVPN connection..."
    openvpn --config "$AZI_FILES_DIR/azilink.ovpn"
}

finish() {
    log "Starting NetworkManager..."
    systemctl start NetworkManager

    log "Exiting..."
    exit $1
}

start
main
finish 0
